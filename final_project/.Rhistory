knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
library(ggplot2)
library(readr)
library(tidyr)
covid_data <- read_csv(here('data',
'processed_data',
'cases_data_plus_mandates-2.csv'),
col_types = list(
X1 = col_double(),
X = col_double(),
state = col_character(),
cases = col_double(),
deaths = col_double(),
new_cases = col_double(),
new_deaths = col_double(),
mask_mandate = col_character(),
date = col_date(format = ""),
fine_enforced = col_logical(),
charge_enforced = col_logical(),
not_enforced = col_logical(),
mandate_start = col_date(format = ""),
mandate_start_2 = col_date(format = ""),
mandate_end = col_date(format = ""),
mandate_end_2 = col_date(format = "")
))
state <- covid_data %>%
group_by(state) %>%
mutate(days = date - first(date) + 1)
# Aggregate at world level
us_data <- state %>%
group_by(date) %>%
summarize(new_cases=sum(new_cases),
cases=sum(cases),
new_deaths=sum(new_deaths),
deaths = sum(deaths)) %>%
mutate(days = date - first(date) + 1)
# Extract specific country: Alabama
alabama <- state %>%
filter(state == "Alabama")
new_york <- covid_data %>%
filter(state =="New York")
# cumulative cases by covid_data for select countries with counts in log10 scale
state_selection <- state %>%
filter(state==c("Alabama", "New York", "Texas", "California", "Nevada"))
ggplot(state_selection, aes(x=as.numeric(days), y=cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(trans="log10")
# Matrix of line graphs of new_cases, new_deaths and recovered for select countries in log10 scale
state_selection %>% gather("Type", "Cases", c(cases, deaths)) %>%
ggplot(aes(x=as.numeric(days), y=Cases, colour=state)) + geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(trans="log10") +
facet_grid(rows=vars(Type))
# cumulative cases by covid_data for select countries with counts in log10 scale
state_selection <- state %>%
filter(state==c("Alabama", "New York", "Texas", "California", "Nevada"))
ggplot(state_selection, aes(x=as.numeric(days), y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(trans="log10")
# cumulative cases by covid_data for select countries with counts in log10 scale
ggplot(state, aes(x=as.numeric(days), y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(trans="log10")
# cumulative cases by covid_data for select countries with counts in log10 scale
state_selection <- state %>%
filter(state==c("Alabama", "New York", "Texas", "California", "Nevada"))
ggplot(state_selection, aes(x=as.numeric(days), y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(trans="log10")
# cumulative cases by covid_data for select countries with counts in log10 scale
state_selection <- state %>%
filter(state==c("Alabama", "New York", "Texas", "California"))
ggplot(state_selection, aes(x=as.numeric(days), y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(trans="log10")
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
data_with_mandates <- read.csv(here('data',
'processed_data',
'cases_data_plus_mandates-2.csv'))
clean_data <- data_with_mandates %>%
filter(new_cases > 0)
before_mandate <- clean_data %>%
group_by(date, state) %>%
filter(ifelse(is.na(mandate_start), mask_mandate == "no", date < mandate_start))
during_mandate <- clean_data %>%
group_by(date, state) %>%
filter(ifelse(is.na(mandate_end), mask_mandate == "yes", date > mandate_start &&
date <= mandate_end))
after_mandate <- clean_data %>%
group_by(date, state) %>%
filter(date < mandate_end)
write.csv(before_mandate, here('data',
'processed_data',
'before_mandate.csv'))
write.csv(during_mandate, here('data',
'processed_data',
'during_mandate.csv'))
write.csv(after_mandate, here('data',
'processed_data',
'after_mandate.csv'))
covid_data <- read_csv(here('data',
'processed_data',
'cases_data_plus_mandates-2.csv'),
col_types = list(
X1 = col_double(),
X = col_double(),
state = col_character(),
cases = col_double(),
deaths = col_double(),
new_cases = col_double(),
new_deaths = col_double(),
mask_mandate = col_character(),
date = col_date(format = ""),
fine_enforced = col_logical(),
charge_enforced = col_logical(),
not_enforced = col_logical(),
mandate_start = col_date(format = ""),
mandate_start_2 = col_date(format = ""),
mandate_end = col_date(format = ""),
mandate_end_2 = col_date(format = "")
))
covid_data %<>% filter(new_cases > 0)
covid_data <- read_csv(here('data',
'processed_data',
'cases_data_plus_mandates-2.csv'),
col_types = list(
X1 = col_double(),
X = col_double(),
state = col_character(),
cases = col_double(),
deaths = col_double(),
new_cases = col_double(),
new_deaths = col_double(),
mask_mandate = col_character(),
date = col_date(format = ""),
fine_enforced = col_logical(),
charge_enforced = col_logical(),
not_enforced = col_logical(),
mandate_start = col_date(format = ""),
mandate_start_2 = col_date(format = ""),
mandate_end = col_date(format = ""),
mandate_end_2 = col_date(format = "")
))
covid_data <- covid_data >% filter(new_cases > 0)
covid_data <- read_csv(here('data',
'processed_data',
'cases_data_plus_mandates-2.csv'),
col_types = list(
X1 = col_double(),
X = col_double(),
state = col_character(),
cases = col_double(),
deaths = col_double(),
new_cases = col_double(),
new_deaths = col_double(),
mask_mandate = col_character(),
date = col_date(format = ""),
fine_enforced = col_logical(),
charge_enforced = col_logical(),
not_enforced = col_logical(),
mandate_start = col_date(format = ""),
mandate_start_2 = col_date(format = ""),
mandate_end = col_date(format = ""),
mandate_end_2 = col_date(format = "")
))
covid_data <- covid_data %>% filter(new_cases > 0)
state <- covid_data %>%
group_by(state) %>%
mutate(days = date - first(date) + 1)
# Aggregate at world level
us_data <- state %>%
group_by(date) %>%
summarize(new_cases=sum(new_cases),
cases=sum(cases),
new_deaths=sum(new_deaths),
deaths = sum(deaths)) %>%
mutate(days = date - first(date) + 1)
# Extract specific country: Alabama
alabama <- state %>%
filter(state == "Alabama")
new_york <- covid_data %>%
filter(state =="New York")
# cumulative cases by covid_data for select countries with counts in log10 scale
state_selection <- state %>%
filter(state==c("Alabama", "New York", "Texas", "California"))
ggplot(state_selection, aes(x=as.numeric(days), y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(trans="log10")
# cumulative cases by covid_data for select countries with counts in log10 scale
state_selection <- state %>%
filter(state==c("Alabama", "New York", "Texas", "California"))
ggplot(state_selection, aes(x=as.numeric(days), y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5))
# cumulative cases by covid_data for select countries with counts in log10 scale
state_selection <- state %>%
filter(state==c("Alabama", "New York", "Texas", "California"))
ggplot(state_selection, aes(x=as.numeric(date), y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5))
# cumulative cases by covid_data for select countries with counts in log10 scale
state_selection <- state %>%
filter(state==c("Alabama", "New York", "Texas", "California"))
ggplot(state_selection, aes(x=date, y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases (log scale)") +
theme(plot.title = element_text(hjust = 0.5))
# cumulative cases by covid_data for select countries with counts in log10 scale
state_selection <- state %>%
filter(state==c("New York", "Texas"))
ggplot(state_selection, aes(x=date, y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases by State", x= "Days", y= "Daily cases") +
theme(plot.title = element_text(hjust = 0.5))
View(covid_data)
# cumulative cases by covid_data for select countries with counts in log10 scale
texas <- state %>%
filter(state == "Texas")
ggplot(texas, aes(x=date, y=new_cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases in Texas", x= "Days", y= "Daily cases") +
theme(plot.title = element_text(hjust = 0.5))
# cumulative cases by covid_data for select countries with counts in log10 scale
texas <- state %>%
filter(state == "Texas")
ggplot(texas, aes(x=date, y=cases, colour=state)) +
geom_line(size=1) +
theme_classic() +
labs(title = "Covid-19 Cases in Texas", x= "Days", y= "Daily cases") +
theme(plot.title = element_text(hjust = 0.5))
# cumulative cases by covid_data for select countries with counts in log10 scale
texas <- state %>%
filter(state == "Texas")
library(lubridate)
day_2 <- lubridate::ymd('2020-04-15')
day_3 <- lubridate::ymd('2020-05-15')
current_day <- lubridate::today()
ggplot(texas, aes(x=date, y=cases, colour=state)) +
geom_line(size=1) +
annotate(geom = "vline",
x = c(day_2, day_3),
xintercept = c(day_2, day_3),
linetype = c("dashed", "solid")) +
theme_classic() +
labs(title = "Covid-19 Cases in Texas", x= "Days", y= "Daily cases") +
theme(plot.title = element_text(hjust = 0.5))
View(texas)
texas[1,]
texas[1,]$mandate_start
# cumulative cases by covid_data for select countries with counts in log10 scale
texas <- state %>%
filter(state == "Texas")
library(lubridate)
day_2 <- lubridate::ymd(texas[1,]$mandate_start)
day_3 <- lubridate::ymd(texas[1,]$mandate_end)
current_day <- lubridate::today()
ggplot(texas, aes(x=date, y=cases, colour=state)) +
geom_line(size=1) +
annotate(geom = "vline",
x = c(day_2, day_3),
xintercept = c(day_2, day_3),
linetype = c("dashed", "solid")) +
theme_classic() +
labs(title = "Covid-19 Cases in Texas", x= "Days", y= "Daily cases") +
theme(plot.title = element_text(hjust = 0.5))
# cumulative cases by covid_data for select countries with counts in log10 scale
texas <- state %>%
filter(state == "Texas") %>%
filter((date >= mandate_start - days(30)) && (date <= mandate_end + days(30)))
library(lubridate)
day_2 <- lubridate::ymd(texas[1,]$mandate_start)
day_3 <- lubridate::ymd(texas[1,]$mandate_end)
current_day <- lubridate::today()
ggplot(texas, aes(x=date, y=cases, colour=state)) +
geom_line(size=1) +
annotate(geom = "vline",
x = c(day_2, day_3),
xintercept = c(day_2, day_3),
linetype = c("dashed", "solid")) +
theme_classic() +
labs(title = "Covid-19 Cases in Texas", x= "Days", y= "Daily cases") +
theme(plot.title = element_text(hjust = 0.5))
# cumulative cases by covid_data for select countries with counts in log10 scale
texas <- state %>%
filter(state == "Texas") %>%
filter((date >= mandate_start - days(30)) && (date <= mandate_end + days(30)))
library(lubridate)
day_2 <- lubridate::ymd(texas[1,]$mandate_start)
day_3 <- lubridate::ymd(texas[1,]$mandate_end)
current_day <- lubridate::today()
ggplot(texas, aes(x=date, y=cases, colour=state)) +
geom_line(size=1) +
geom_smooth(method = "lm", se = FALSE) +
annotate(geom = "vline",
x = c(day_2, day_3),
xintercept = c(day_2, day_3),
linetype = c("dashed", "solid")) +
theme_classic() +
labs(title = "Covid-19 Cases in Texas", x= "Days", y= "Daily cases") +
theme(plot.title = element_text(hjust = 0.5))
# cumulative cases by covid_data for select countries with counts in log10 scale
texas <- state %>%
filter(state == "Texas") %>%
filter((date >= mandate_start - days(30)) && (date <= mandate_end + days(30)))
library(lubridate)
day_2 <- lubridate::ymd(texas[1,]$mandate_start)
day_3 <- lubridate::ymd(texas[1,]$mandate_end)
current_day <- lubridate::today()
ggplot(texas, aes(x=date, y=cases, colour=state)) +
geom_line(size=1) +
geom_ribbon( aes(ymin = lwr, ymax = upr, fill = grp, color = NULL), alpha = .15) +
geom_line( aes(y = fit), size = 1) +
annotate(geom = "vline",
x = c(day_2, day_3),
xintercept = c(day_2, day_3),
linetype = c("dashed", "solid")) +
theme_classic() +
labs(title = "Covid-19 Cases in Texas", x= "Days", y= "Daily cases") +
theme(plot.title = element_text(hjust = 0.5))
# cumulative cases by covid_data for select countries with counts in log10 scale
texas <- state %>%
filter(state == "Texas") %>%
filter((date >= mandate_start - days(30)) && (date <= mandate_end + days(30)))
fitlm = lm(cases ~ date, data = texas)
library(lubridate)
day_2 <- lubridate::ymd(texas[1,]$mandate_start)
day_3 <- lubridate::ymd(texas[1,]$mandate_end)
current_day <- lubridate::today()
ggplot(texas, aes(x=date, y=cases, colour=state)) +
geom_line(size=1) +
geom_smooth(method = "lm", se = FALSE) +
annotate(geom = "vline",
x = c(day_2, day_3),
xintercept = c(day_2, day_3),
linetype = c("dashed", "solid")) +
theme_classic() +
labs(title = "Covid-19 Cases in Texas", x= "Days", y= "Daily cases") +
theme(plot.title = element_text(hjust = 0.5))
fitlm
shiny::runApp('CovidTracker')
runApp('CovidTracker')
runApp('CovidTracker')
runApp('CovidTracker')
runApp('CovidTracker')
runApp('CovidTracker')
runApp('CovidTracker')
runApp()
renderer = file_renderer("images", prefix = "death_plot_", overwrite = TRUE))
?read_csv
runApp()
runApp()
runApp()
covid_data <- read_csv(here('data',
'processed_data',
'cases_data_plus_mandates-2.csv'),
col_types = list(
X1 = col_double(),
X = col_double(),
state = col_character(),
cases = col_double(),
deaths = col_double(),
new_cases = col_double(),
new_deaths = col_double(),
mask_mandate = col_character(),
date = col_date(format = ""),
fine_enforced = col_logical(),
charge_enforced = col_logical(),
not_enforced = col_logical(),
mandate_start = col_date(format = ""),
mandate_start_2 = col_date(format = ""),
mandate_end = col_date(format = ""),
mandate_end_2 = col_date(format = "")
))
covid_data <- read_csv(here('data',
'processed_data',
'cases_data_plus_mandates-2.csv'),
col_types = list(
state = col_character(),
cases = col_double(),
deaths = col_double(),
new_cases = col_double(),
new_deaths = col_double(),
mask_mandate = col_character(),
date = col_date(format = ""),
fine_enforced = col_logical(),
charge_enforced = col_logical(),
not_enforced = col_logical(),
mandate_start = col_date(format = ""),
mandate_start_2 = col_date(format = ""),
mandate_end = col_date(format = ""),
mandate_end_2 = col_date(format = "")
))
covid_data <- covid_data %>% filter(new_cases > 0) %>%
mutate(weekday = weekdays(date)) %>%
filter(weekday == "Tuesday")
states <- covid_data %>% group_by(state) %>% select(state)
View(states)
runApp()
runApp()
View(states)
states <- covid_data %>% group_by(state) %>% select(state)%>% distinct(state)
runApp()
View(covid_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tsdata <- ts(new_york, frequency = 12)
ddata <- decompose(tsdata, "multiplicative")
?decompose
tsdata
View(tsdata)
new_york <- new_york %>% select(-c(mandate_start_2, mandate_end, mandate_end_2))
tsdata <- ts(new_york, frequency = 12)
ddata <- decompose(tsdata, "multiplicative")
plot(ddata)
plot(ddata$trend)
runApp()
runApp()
plot.ts(new_york)
runApp()
